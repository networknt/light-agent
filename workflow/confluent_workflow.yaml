workflow:
  name: "Confluent Local Services Workflow"
  description: "A workflow to start Confluent local services and manage docker compose."
  steps:
    - id: "step_1"
      name: "Start Confluent local services"
      type: "system_command"
      command: "confluent local services start"
      output_path: "step_1_output.txt"

    - id: "step_2"
      name: "Check if Confluent started successfully"
      type: "gemini_analyze"
      input: "{{ step_1.output }}"
      prompt: "Analyze the output from the command and check if the confluent services started successfully. Respond with 'true' if it started successfully, otherwise 'false'."
      output_path: "step_2_gemini.txt"

    - id: "step_3"
      name: "Conditional restart of Confluent services"
      type: "condition"
      condition: "{{ step_2.output == 'true' }}"
      then:
        - id: "step_4"
          name: "Confluent services started successfully"
          type: "notification"
          message: "Confluent services started successfully."
      else:
        - id: "step_5"
          name: "Stop Confluent services"
          type: "system_command"
          command: "confluent local services stop"
        - id: "step_6"
          name: "Start Confluent local services again"
          type: "system_command"
          command: "confluent local services start"
          output_path: "step_6_output.txt"
        - id: "step_7"
          name: "Check if Confluent started successfully after restart"
          type: "gemini_analyze"
          input: "{{ step_6.output }}"
          prompt: "Analyze the output from the command and check if the confluent services started successfully. Respond with 'true' if it started successfully, otherwise 'false'."
          output_path: "step_7_gemini.txt"
        - id: "step_8"
          name: "Conditional notification after restart"
          type: "condition"
          condition: "{{ step_7.output == 'true' }}"
          then:
            - id: "step_9"
              name: "Confluent services restarted successfully"
              type: "notification"
              message: "Confluent services restarted successfully."
          else:
            - id: "step_10"
              name: "Confluent services failed to start"
              type: "notification"
              message: "Confluent services failed to start after multiple attempts."

    - id: "step_11"
      name: "Navigate to light-scheduler directory"
      type: "system_command"
      directory: "~/lightapi/portal-config-loc/light-scheduler"
      command: ""

    - id: "step_12"
      name: "Docker compose down"
      type: "system_command"
      directory: "~/lightapi/portal-config-loc/light-scheduler"
      command: "docker compose down"

    - id: "step_13"
      name: "Docker compose up"
      type: "system_command"
      directory: "~/lightapi/portal-config-loc/light-scheduler"
      command: "docker compose up"
